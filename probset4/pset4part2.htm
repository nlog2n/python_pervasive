<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="pset4part2_files/filelist.xml">
<title>6</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="time"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Christopher Leung</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Christopher Leung</o:LastAuthor>
  <o:Revision>5</o:Revision>
  <o:TotalTime>114</o:TotalTime>
  <o:Created>2004-10-07T19:50:00Z</o:Created>
  <o:LastSaved>2004-10-07T19:55:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1296</o:Words>
  <o:Characters>6119</o:Characters>
  <o:Company>Microsoft Corporation</o:Company>
  <o:Lines>161</o:Lines>
  <o:Paragraphs>60</o:Paragraphs>
  <o:CharactersWithSpaces>7355</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:\5B8B\4F53;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:"\@SimSun";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:884832818;
	mso-list-type:hybrid;
	mso-list-template-ids:-1895255342 67698705 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-text:"%1\)";
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="3074"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.5in;text-indent:.5in'><b
style='mso-bidi-font-weight:normal'>6.894 PSET 4 Part 2<o:p></o:p></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-tab-count:4'>                                                </span>Due:
Saturday, Oct. 16, </b><st1:time Minute="0" Hour="18"><b style='mso-bidi-font-weight:
 normal'>6pm</b></st1:time><b style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>At this point, you should have some understanding of how the
whole <span class=SpellE>SpeechBuilder</span> system works after completing
part 1. That was the easy part. Now that you have gotten the first part of the
problem set done, we now move onto the second part of the <span class=SpellE>pset</span>,
which is the actual real work. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>So you have created a domain with <span class=SpellE>SpeechBuilder</span>,
and have specified a vocabulary. Right now <span class=SpellE>SpeechBuilder</span>
is set up to simply repeat what you said to it right back to you. Clearly, this
isn’t a very useful feature. What you need to do now is relay your speech
commands not to a script that echoes what you said, but figures out what you
said, and calls the appropriate function with regards to our <span
class=SpellE>Stata</span> Center <span class=SpellE>Mapquest</span> program. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The first thing you need to do is edit the back-end URL script.
We now want it to say “<span class=SpellE>relay<span class=GramE>:name</span>_search</span>”.
This “<span class=SpellE>name_search</span>” is what you will specify on the <span
class=SpellE>ipaq</span> so the <span class=SpellE>SpeechBuilder</span> server
can recognize it. Make sure to hit apply, and compile again, so that this new
change can take effect. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>You will also have to install another python module for this
next step, called python2.3-galaxy, so run</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=SpellE><span class=GramE><span style='font-family:
"Courier New";color:red'>ipkg</span></span></span><span style='font-family:
"Courier New";color:red'> install python2.3-galaxy<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>This allows us to interface with the Galaxy speech servers. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The first thing you will do is get a test-<span
class=SpellE>echo.py</span> (located at bottom of this page) file on your <span
class=SpellE>ipaq</span>. Check out the code for this file, and make sure you
understand how it works. What the goal of this part is to allow you to gain
some insight about how the frame-relay really works. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Once you compile the new domain with the altered backend-URL
script, you can just run the same command, </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='font-family:"Courier New";color:red'>./<span
class=SpellE>oxclass.cmd</span> yes <span class=SpellE>yes</span><o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Now that this portion is running, it knows that it is
looking for the frame relay to connect to it at a specific port. You can find
it by looking at the <span class=SpellE>portmap</span> file, and looking at the
port associated with the frame relay. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Download the test-<span class=SpellE>echo.py</span> script
onto your <span class=SpellE>ipaq</span>, and start running it in the
background. In the line </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='font-size:9.0pt;font-family:"Courier New";
color:red'>server1 = <span class=SpellE><span class=GramE>galaxy.server.Server</span></span><span
class=GramE>(</span>“ozone.csail.mit.edu”, XXXXX, “<span class=SpellE>name_search</span>”)<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>We can see that this connects our script to ozone to that
particular port XXXXX (the frame relay port number), and “<span class=SpellE>name_search</span>”
corresponds to the back-end script itself.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Now this backend is connected to the Galaxy server, but it
can only start getting information from the <span class=SpellE>SpeechBuilder</span>
server if you start up <span class=SpellE>Galaudio</span> and start talking!</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>So, do just that:</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=SpellE><span style='font-size:9.0pt;font-family:
"Courier New";color:red'>Galaudio</span></span><span style='font-size:9.0pt;
font-family:"Courier New";color:red'> /dev/sound/<span class=SpellE>dsp</span>
ozone.csail.mit.edu username <span class=SpellE>portnum</span> push no 16000
8000<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='color:red'>NOTE</span>: this <span
class=SpellE>portnum</span> is a DIFFERENT port number that you input into your
test-<span class=SpellE>echo.py</span> script. In the script, you use the frame
relay port in <span class=SpellE>portmap</span>, while when using <span
class=SpellE>Galaudio</span>, you need to use the oxygen port number in <span
class=SpellE>portmap</span> file, located in the same directory as your <span
class=SpellE>DOMAIN.names</span>. These are two DIFFERENT port numbers, so be
careful!</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Once this connects to the server successfully, your system
for interacting with the backend script through speech should be all set. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>When you press the button to record your voice, that .wav
file gets sent over to the <span class=SpellE>SpeechBuilder</span> server. It
parses your voice in the context of the domain you specified, and then returns
that information to the <span class=SpellE>Ipaq</span>. The backend script uses
that information, and figures out how to act accordingly. Once you get this
working on your <span class=SpellE>ipaq</span> for the echo script, you should
have all the tools you need to incorporate speech into your <span class=SpellE>Stata</span>
Center <span class=SpellE>MapQuest</span>. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Remember, you want to support as many commands as possible
so that you can just talk to the program without having to use your stylus to
input anything. You should add voice support for:</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo1;
tab-stops:list .5in'><![if !supportLists]><span style='mso-fareast-font-family:
"Times New Roman"'><span style='mso-list:Ignore'>1)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]>Searching for a path from one room to another,
i.e. “Take me from G836 to G804.” Once you say this, <span class=SpellE>SpeechBuilder</span>
should be able to parse your command and call the right function to provide
that search.</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo1;
tab-stops:list .5in'><![if !supportLists]><span style='mso-fareast-font-family:
"Times New Roman"'><span style='mso-list:Ignore'>2)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]>Add support for the program so that you can just
tell the computer where you are going. For example, the first time you say, “I’m
at G804,” and the system remembers your current position. Then, if you decide
to move, you just say, “Take me to G855,” and the program should know to take
you from your current location (G804) to G855, without you having to explicitly
say where you currently are. Once you <span class=GramE>move,</span> that new
location becomes your new current location.</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo1;
tab-stops:list .5in'><![if !supportLists]><span style='mso-fareast-font-family:
"Times New Roman"'><span style='mso-list:Ignore'>3)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]>Add better descriptors to rooms. Instead of
G866, you can also call it Bob’s office, or the coffee machine, or the elevator
lobby, etc. This makes it less necessary to memorize all the different room <span
class=GramE>numbers,</span> and you can talk to the program more easily. You
should also try to support the query, “Where is Larry’s office?”, and this
should return the corresponding room number.</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo1;
tab-stops:list .5in'><![if !supportLists]><span style='mso-fareast-font-family:
"Times New Roman"'><span style='mso-list:Ignore'>4)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]>(Optional) If you ask where someone’s office is,
or where the water fountain is, you should keep track of that information. This
way, the user can ask how to get “there” without explicitly saying “the water
fountain”. For example, say you ask, “Where is the coffee station?” Your
program should reply something like “G404.”</p>

<p class=MsoNormal style='margin-left:.5in'>Now you can say “Can you take me
there<span class=GramE>?,</span>” and your program should know automatically to
take you to that queried location.</p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>You can see how a lot of these ideas are intended to make
you speak as naturally as possible to the program, as you would speak to a
person. That’s the idea of pervasive computing.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The due date for this problem set will be <b
style='mso-bidi-font-weight:normal'><span style='color:blue'>Saturday October
16, at </span></b><st1:time Minute="0" Hour="18"><b style='mso-bidi-font-weight:
 normal'><span style='color:blue'>6pm</span></b></st1:time>. Please email me
your <span class=SpellE>pset</span> code and <span class=GramE>a<span
style='mso-spacerun:yes'>  </span>readme.txt</span> of what you did, things I need
to know to run it, etc. Tar it up, and send it to me in the format first
initial, last name, 6894pset4.tar.gz. So, if I was handing in a <span
class=SpellE>pset</span>, mine would be:</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='color:blue'>cleung6894pset4.tar.gz <o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Also, I will be conducting interactive grading for this <span
class=SpellE>pset</span>, so you can demo for me what you did, and the
functioning of your code. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Have some fun with it! It will be very convenient to use
speech (although sometimes it is slow), and should be a fun project, so get
started early.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Good luck, and don’t hesitate to email me if you have any
questions.</p>

<p class=MsoNormal>-Chris</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Code for test-<span class=SpellE>echo.py</span><span
style='color:red'>:<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'>#!/usr/bin/python2.1<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'># Use the <span
class=SpellE>galaxy.server</span> library<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
class=GramE><span style='font-size:9.0pt;font-family:"Courier New";color:red'>import</span></span><span
style='font-size:9.0pt;font-family:"Courier New";color:red'> <span
class=SpellE>galaxy.server</span><o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'># <span
class=SpellE>Initalize</span> the server object<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'>server1 = <span
class=SpellE><span class=GramE>galaxy.server.Server</span></span><span
class=GramE>(</span>&quot;ozone.csail.mit.edu&quot;, 10087, &quot;<span
class=SpellE>ckl_jaim</span>&quot;)<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'># <span
class=GramE>Actually</span> connect to the Galaxy frame relay<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
class=GramE><span style='font-size:9.0pt;font-family:"Courier New";color:red'>server1.connect()</span></span><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'># Use the active
variable to quit if we get a goodbye<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
class=GramE><span style='font-size:9.0pt;font-family:"Courier New";color:red'>active</span></span><span
style='font-size:9.0pt;font-family:"Courier New";color:red'> = 1<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
class=GramE><span style='font-size:9.0pt;font-family:"Courier New";color:red'>while</span></span><span
style='font-size:9.0pt;font-family:"Courier New";color:red'> (active):<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>    </span># Look for an incoming message from the
server<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>    </span>c = <span class=GramE>server1.handleMessage(</span>0)<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>    </span># <span class=GramE>If</span> we got a
message (recognition result)<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>    </span><span class=GramE>if</span> c:<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>        </span># Print out the frame<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>        </span><span class=GramE>print</span> <span
class=SpellE>c.frame.toString</span>()<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>        </span><o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>        </span># Figure out the action<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>        </span><span class=GramE>action</span> = <span
class=SpellE>c.frame.getAction</span>()<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>        </span># <span class=GramE>The</span> <span
class=SpellE>call_answered</span> action means we just got a new connection<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>        </span><span class=GramE>if</span> (action ==
'<span class=SpellE>call_answered</span>'):<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>            </span><span class=SpellE>c.sb_<span
class=GramE>reply</span></span><span class=GramE>(</span>'Please enter voice
command')<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>        </span># Good bye means close off the
conversation<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>        </span><span class=SpellE><span class=GramE>elif</span></span>
(action == '<span class=SpellE>good_bye</span>'):<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>            </span><span class=SpellE>c.sb_<span
class=GramE>goodbye</span></span><span class=GramE>(</span>'Good Bye')<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>            </span><span class=GramE>active</span> = 0<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>        </span># <span class=GramE>This</span> means
we really got some stuff<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>      </span><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>elif</span></span> (action):<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>            </span># Figure out what they said and
speak it back to them<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>            </span><o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>            </span><span class=SpellE><span
class=GramE>mytext</span></span> = <span class=SpellE>c.frame.getText</span>()<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>            </span><span class=GramE>if</span> <span
class=SpellE>mytext</span>:<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>                </span><span class=SpellE>c.sb_<span
class=GramE>reply</span></span><span class=GramE>(</span>'I think you said '+ <span
class=SpellE>mytext</span>)<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>            </span><span class=GramE>else</span>:<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>                </span><span class=SpellE>c.sb_<span
class=GramE>reply</span></span><span class=GramE>(</span>'I <span class=SpellE>dont</span>
know what you said')<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>        </span><span class=GramE>else</span>:<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>            </span># <span class=GramE>This</span>
shouldn't happen<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><span
style='mso-spacerun:yes'>            </span><span class=SpellE>c.sb_<span
class=GramE>reply</span></span><span class=GramE>(</span>'I have no idea what
is happening')<o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:9.0pt;font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:9.0pt;color:red'><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>
